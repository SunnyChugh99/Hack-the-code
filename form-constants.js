export const ADD_MODEL_DEPLOY_FORM = {
	"": [
		{
			field_id: "tar_file",
			field_label: "Upload model file",
			field_value: {
				file: "",
				fileName: "",
				fileSize: "",
			},
			field_type: "upload",
			alternate_field_type: "upload",
			field_width: "100%",
			field_mandatory: true,
			file_type: "tar.gz",
			file_accept: "application/gzip, .gz, .tar",
		},
	],
	PROJECT_DETAILS: [
		{
			field_id: "project_id",
			field_label: "Project name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
			field_preload: true,
		},
	],
	MODEL_DETAILS: [
		{
			field_id: "name",
			field_label: "Model name",
			field_value: "",
			field_type: "text",
			field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
			field_validation_message:
				"Model name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
			field_max_limit: 25,
			field_max_message: "Model name should not exceed 25 characters",
			field_min_limit: 3,
			field_min_message: "Model name should contain at least 3 characters",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "description",
			field_label: "Model purpose",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			max_characters: 100,
			field_validation_regex: /^[A-Za-z][A-Za-z0-9\s\-_,!.]{9,99}$/,
			field_validation_message:
				"Model purpose must start with an alphabet and contain only alphabets, numbers and '!_-.,' as special character",
			field_max_message: "Model purpose should not exceed 100 characters",
			field_min_limit: 10,
			field_min_message: "Model purpose should contain at least 10 characters",
			field_mandatory: true,
		},
		{
			field_id: "flavour",
			field_label: "Flavour",
			field_value: "",
			field_type: "select",
			field_options: [
				{
					label: "Sklearn",
					value: "sklearn",
				},
				{
					label: "Keras",
					value: "keras",
				},
				{
					label: "TensorFlow",
					value: "tensorflow",
				},
				{
					label: "PyTorch",
					value: "pytorch",
				},
				{
					label: "Spacy",
					value: "spacy",
				},
				{
					label: "Pyspark",
					value: "pyspark",
				},
				{
					label: "R",
					value: "r",
				},
				{
					label: "PMML",
					value: "pmml",
				},
				{
					label: "Ensemble",
					value: "ensemble",
				},
				{
					label: "XGBoost",
					value: "xgboost",
				},
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "base_id",
			field_label: "Model type",
			field_value: "",
			field_type: "select",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "init_script",
			field_label: "Init script",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			field_mandatory: false,
		},
	],
};

export const ADD_MODEL_MONITOR_FORM = {
	PROJECT_DETAILS: [
		{
			field_id: "project_id",
			field_label: "Project name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
			field_preload: true,
		},
	],
	MODEL_DETAILS: [
		{
			field_id: "name",
			field_label: "Model name",
			field_value: "",
			field_type: "text",
			field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
			field_validation_message:
				"Model name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
			field_max_limit: 25,
			field_max_message: "Model name should not exceed 25 characters",
			field_min_limit: 3,
			field_min_message: "Model name should contain at least 3 characters",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "description",
			field_label: "Model purpose",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			max_characters: 100,
			field_validation_regex: /^[A-Za-z][A-Za-z0-9\s\-_,!.]{9,99}$/,
			field_validation_message:
				"Model purpose must start with an alphabet and contain only alphabets, numbers and '!_-.,' as special characters",
			field_max_message: "Model purpose should not exceed 100 characters",
			field_min_limit: 10,
			field_min_message: "Model purpose should contain at least 10 characters",
			field_mandatory: true,
		},
		{
			field_id: "flavour",
			field_label: "Flavour",
			field_value: "",
			field_type: "select",
			field_options: [
				{
					label: "Sklearn",
					value: "sklearn",
				},
				{
					label: "Keras",
					value: "keras",
				},
				{
					label: "TensorFlow",
					value: "tensorflow",
				},
				{
					label: "PyTorch",
					value: "pytorch",
				},
				{
					label: "Spacy",
					value: "spacy",
				},
				{
					label: "Pyspark",
					value: "pyspark",
				},
				{
					label: "R",
					value: "r",
				},
				{
					label: "PMML",
					value: "pmml",
				},
				{
					label: "Ensemble",
					value: "ensemble",
				},
				{
					label: "XGBoost",
					value: "xgboost",
				},
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "base_id",
			field_label: "Model type",
			field_value: "",
			field_type: "select",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "init_script",
			field_label: "Init script",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			field_mandatory: false,
		},
		{
			field_id: "tar_file",
			field_label: "Upload model file",
			field_value: {
				file: "",
				fileName: "",
				fileSize: "",
			},
			field_type: "upload",
			alternate_field_type: "upload",
			field_width: "100%",
			field_mandatory: true,
			file_type: "tar.gz",
			file_accept: "application/gzip, .gz, .tar",
		},
	],
};

export const ADD_PROJECT_FORM = {
	PROJECT_DETAILS: [
		{
			field_id: "projectName",
			field_label: "Project name",
			field_value: "",
			field_type: "text",
			field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
			field_validation_message:
				"Project name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
			field_max_limit: 25,
			field_max_message: "Project name should not exceed 25 characters",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "projectPurpose",
			field_label: "Project purpose",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			max_characters: 255,
			field_mandatory: false,
		},
	],
};

export const UPLOAD_NOTEBOOK_FILE = {
	FILE_DETAILS: [
		{
			field_id: "file",
			field_label: "File",
			field_value: {
				file: "",
				fileName: "",
				fileSize: "",
			},
			field_type: "upload",
			alternate_field_type: "upload",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "issue_id",
			field_label: "Issue id",
			field_value: "",
			field_type: "text",
			field_max_limit: 15,
			field_max_message: "Issue id should not exceed 15 characters",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "commit_message",
			field_label: "Commit message",
			field_value: "",
			field_type: "text",
			field_width: "100%",
			field_mandatory: false,
		},
	],
};

export const DELETE_NOTEBOOK_FILE = {
	CONFIRM_DELETE: [
		{
			section_label: "Delete confirmation",
		},
		{
			field_id: "issue_id",
			field_label: "Issue id",
			field_value: "",
			field_type: "text",
			field_max_limit: 15,
			field_max_message: "Issue id should not exceed 15 characters",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "commit_message",
			field_label: "Commit message",
			field_value: "",
			field_type: "text",
			field_width: "100%",
			field_mandatory: false,
		},
	],
};

export const ADD_TEMPLATE_FORM = {
	BASIC_DETAILS_FORM: {
		BASIC_DETAILS: [
			{
				field_id: "template_resources",
				field_label: "Type",
				field_value: "",
				field_type: "asyncselect",
				field_options: [],
				field_width: "100%",
				field_preload: true,
				field_mandatory: true,
			},
			{
				field_id: "base_image_id",
				field_label: "Base template",
				field_value: {
					label: "",
					value: "",
					icon: "",
				},
				field_type: "selectWithIcons",
				field_options: [],
				field_width: "100%",
				field_mandatory: true,
			},
			{
				field_id: "icon",
				field_label: "Template icon",
				field_value: "",
				field_type: "hidden",
				field_width: "100%",
				field_mandatory: false,
			},
			{
				field_id: "name",
				field_label: "Template name",
				field_value: "",
				field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
				field_validation_message:
					"Template name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
				field_max_limit: 25,
				field_max_message: "Template name should not exceed 25 characters.",
				field_type: "text",
				field_width: "100%",
				field_min_limit: 3,
				field_min_message: "Template name should contain at least 3 characters",
				field_mandatory: true,
			},
			{
				field_id: "description",
				field_label: "Template description",
				field_value: "",
				field_type: "multiline",
				max_rows: 4,
				max_characters: 100,
				field_validation_regex: /^[A-Za-z][A-Za-z0-9\s\-_,!.]{9,99}$/,
				field_validation_message:
					"Template description must start with an alphabet and contain only alphabets, numbers and '!_-.,' as special characters",
				field_width: "100%",
				field_min_limit: 10,
				field_min_message: "Template description should contain at least 10 characters",
				field_mandatory: false,
			},
		],
	},
	INFRASTRUCTURE_DETAILS_FORM: {
		INFRASTRUCTURE_DETAILS: [
			{
				field_id: "init_script",
				field_label: "Pre init script",
				field_value: "",
				field_type: "multiline",
				field_width: "100%",
				max_rows: 4,
				field_mandatory: false,
			},
			{
				field_id: "default_container_size",
				field_label: "Default container size",
				field_value: "",
				field_type: "card",
				field_width: "100%",
				field_preload: true,
				field_mandatory: true,
			},
			{
				field_id: "executor_resource_id",
				field_label: "Default container executor size",
				field_value: "",
				field_type: "hidden",
				alternate_field_type: "card",
				field_width: "100%",
				field_preload: true,
				field_mandatory: false,
			},
			{
				field_id: "number_of_executors",
				field_label: "Number of executors",
				field_value: 2,
				field_type: "hidden",
				alternate_field_type: "select",
				field_options: [
					{
						label: "2",
						value: 2,
					},
					{
						label: "3",
						value: 3,
					},
					{
						label: "4",
						value: 4,
					},
					{
						label: "5",
						value: 5,
					},
					{
						label: "6",
						value: 6,
					},
					{
						label: "7",
						value: 7,
					},
					{
						label: "8",
						value: 8,
					},
					{
						label: "9",
						value: 9,
					},
					{
						label: "10",
						value: 10,
					},
				],
				field_width: "100%",
				field_mandatory: false,
			},
		],
	},
	ENVIRONMENT_VARIABLES_FORM: {
		ENVIRONMENT_VARIABLES: [
			{
				field_id: "variable_type",
				field_label: "Variable type",
				field_value: "INPUT",
				field_type: "select",
				field_options: [{ label: "Input", value: "INPUT" }],
				field_width: "100%",
				field_mandatory: true,
				disabled: true,
			},
			{
				field_id: "data_type",
				field_label: "Data type",
				field_value: "STRING",
				field_type: "select",
				field_options: [{ label: "String", value: "STRING" }],
				field_width: "100%",
				field_mandatory: true,
				disabled: true,
			},
			{
				field_id: "variable_name",
				field_label: "Variable name",
				field_value: "",
				field_type: "text",
				field_width: "100%",
				field_max_limit: 25,
				field_max_message: "Variable name should not exceed 25 characters",
				field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
				field_validation_message:
					"Variable name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
				field_mandatory: true,
				field_min_limit: 3,
				field_min_message: "Variable name must contain at least 3 characters",
			},
			{
				field_id: "variable_value",
				field_label: "Variable value",
				field_value: "",
				field_type: "text",
				field_width: "100%",
				field_max_limit: 255,
				field_max_message: "Variable value should not exceed 255 characters",
				field_mandatory: true,
			},
			{
				field_id: "secured",
				field_label: "Secure variable",
				field_value: false,
				field_type: "checkbox",
				field_width: "20%",
				field_mandatory: false,
			},
		],
	},
	DEPENDENCIES_FORM: {
		DEPENDENCIES: [
			{
				field_id: "dependencies",
				field_label: "Dependencies",
				field_value: "",
				field_options: [
					{
						label: "Pip packages",
						description: "No packages added",
						value: "pypi",
					},
					// {
					// 	label: "Git packages",
					// 	description: "No packages added",
					// 	value: "git",
					// },
					{
						label: "Conda packages",
						description: "No packages added",
						value: "conda",
					},
				],
				field_type: "card",
				field_action: true,
				field_width: "100%",
				field_mandatory: false,
			},
		],
	},
	CREATE_TEMPLATE_FORM: {
		COMMIT_SETTINGS: [
			{
				field_id: "auto_commit",
				field_label: "",
				field_value: 1,
				field_options: [
					{
						label: "Auto commit",
						description: "Save changes to the repository or version control system with every change made.",
						value: 1,
					},
					{
						label: "Manual commit",
						description:
							"Requires you to manually save and commit changes to the repository or version control system.",
						value: 0,
					},
				],
				field_type: "card",
				field_width: "100%",
				field_mandatory: true,
			},
		],
	},
};

export const ENVIRONMENT_VARIABLES_REVERSE_SAVE_MAPPING = {
	inputParameterType: "Variable type",
	inputParameterDataType: "Data type",
	inputParameterName: "Name",
	parameterValue: "Value",
	secured: "Secure",
	createdDate: "Created on",
	updatedDate: "Last updated on",
};

export const ENVIRONMENT_VARIABLES_SAVE_MAPPING = {
	"Variable type": "inputParameterType",
	"Data type": "inputParameterDataType",
	Name: "inputParameterName",
	Value: "parameterValue",
	Secure: "secured",
	"Created on": "createdDate",
	"Last updated on": "updatedDate",
};

export const GIT_REPOSITORY_REVERSE_TABLE_MAPPING = {
	"Git url": "repo_url",
	Username: "username",
	"Git branch": "branch",
	"Destination folder": "output",
};

export const DEPENDENCIES_MAPPING = {
	pypi: "pip_packages",
	cran: "cran_packages",
	git: "git_macros_config",
	conda: "conda_packages",
};

export const GIT_REPOSITORY_TABLE_MAPPING = {
	repo_url: "Git url",
	username: "Username",
	branch: "Git branch",
	output: "Destination folder",
};

export const ADD_GIT_REPO_PACKAGE_FORM = {
	ADD_PACKAGE: [
		{
			field_id: "repo_url",
			field_label: "Git url",
			field_value: "",
			field_type: "text",
			field_validation_regex: /^(http:\/\/|https:\/\/).*\.git$/,
			field_validation_message: "Git url should start with http:// or https:// and end with .git",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "username",
			field_label: "Username",
			field_value: "",
			field_type: "text",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "password",
			field_label: "Password",
			field_value: "",
			field_type: "password",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "branch",
			field_label: "Branch",
			field_value: "",
			field_type: "text",
			field_validation_regex: /^(?!\.|.*\.\.|.*\\\\|.*~|.*\^|.*:|.*\/)(?!.*(\.lock|\/)$).*$/,
			field_validation_message: "Please enter a valid branch name of the repository",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "output",
			field_label: "Destination folder",
			field_value: "shared_data",
			field_type: "text",
			field_width: "100%",
			field_mandatory: true,
		},
	],
};

export const ADD_PACKAGE_FORM = {
	ADD_PACKAGE: [
		{
			field_id: "dependency",
			field_label: "Dependency",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "base_image",
			field_label: "Base image",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "package_name",
			field_label: "Name",
			field_value: "",
			field_type: "asyncselectdelay",
			field_options: [],
			field_placeholder: "Start typing to select a package",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "package_version",
			field_label: "Version",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
		},
	],
};

export const REPOSITORY_REVERSE_TABLE_MAPPING = {
	"Package name": "package_name",
	Version: "package_version",
};

export const ENVIRONMENT_VARIABLES_REVERSRE_TABLE_MAPPING = {
	"Variable type": "variable_type",
	"Data type": "data_type",
	Name: "variable_name",
	Value: "variable_value",
	Secure: "secured",
};

export const ENVIRONMENT_VARIABLES_TABLE_MAPPING = {
	variable_type: "Variable type",
	data_type: "Data type",
	variable_name: "Name",
	variable_value: "Value",
	secured: "Secure",
};

export const ADD_VERSION_DETAILS_FORM = {
	VERSION_DETAILS: [
		{
			field_id: "flavour",
			field_label: "Flavour",
			field_value: "",
			field_type: "select",
			disabled: true,
			field_options: [
				{
					label: "Sklearn",
					value: "sklearn",
				},
				{
					label: "Keras",
					value: "keras",
				},
				{
					label: "TensorFlow",
					value: "tensorflow",
				},
				{
					label: "PyTorch",
					value: "pytorch",
				},
				{
					label: "Spacy",
					value: "spacy",
				},
				{
					label: "Pyspark",
					value: "pyspark",
				},
				{
					label: "R",
					value: "r",
				},
				{
					label: "PMML",
					value: "pmml",
				},
				{
					label: "Ensemble",
					value: "ensemble",
				},
				{
					label: "XGBoost",
					value: "xgboost",
				},
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "base_id",
			field_label: "Model type",
			field_value: "",
			field_type: "select",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "tar_file",
			field_label: "Upload model file",
			field_value: {
				file: "",
				fileName: "",
				fileSize: "",
			},
			field_type: "upload",
			alternate_field_type: "upload",
			field_width: "100%",
			field_mandatory: true,
			file_type: "tar.gz",
			file_accept: "application/gzip, .gz, .tar",
		},
	],
};

export const ADD_PARAMETER_FORM = {
	PARAMETER_DETAILS: [
		{
			field_id: "inputParameterType",
			field_label: "Parameter type",
			field_value: "",
			field_type: "select",
			field_options: [{ label: "Input", value: "INPUT" }],
			field_width: "100%",
			field_mandatory: true,
			disabled: false,
		},
		{
			field_id: "inputParameterDataType",
			field_label: "Data type",
			field_value: "",
			field_type: "select",
			alternate_field_type: "select",
			field_options: [
				{ label: "Integer", value: "INTEGER" },
				{ label: "Long", value: "LONG" },
				{ label: "Double", value: "DOUBLE" },
				{ label: "Date", value: "DATE" },
				{ label: "String", value: "STRING" },
				{ label: "Timestamp", value: "TIMESTAMP" },
			],
			field_width: "100%",
			field_mandatory: true,
			disabled: false,
		},
		{
			field_id: "database",
			field_label: "Database type",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "select",
			field_options: [
				{ label: "Oracle", value: "ORACLE" },
				{ label: "Mysql", value: "MYSQL" },
				{ label: "Sqlserver", value: "SQLSERVER" },
				{ label: "Postgres", value: "POSTGRES" },
				{ label: "Snowflake", value: "SNOWFLAKE" },
			],
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "connectionId",
			field_label: "Connection",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "inputParameterName",
			field_label: "Name",
			field_value: "",
			field_type: "text",
			field_width: "100%",
			field_max_limit: 255,
			field_max_message: "Name should not exceed 255 characters",
			field_validation_regex: /^[a-zA-Z](?:[a-zA-Z0-9_]*[a-zA-Z0-9])?$/,
			field_validation_message:
				"Parameter name must start with an alphabet, can contain only '_' as special character and cannot contain space or end with special character",
			field_mandatory: true,
			disabled: false,
		},
		{
			field_id: "parameterValue",
			field_label: "Value",
			field_value: "",
			field_type: "password",
			alternate_field_type: "text",
			field_width: "100%",
			field_max_limit: 255,
			field_max_message: "Value should not exceed 255 characters",
			field_mandatory: true,
		},
		{
			field_id: "query",
			field_label: "Query",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "multiline",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "inputReferenceType",
			field_label: "Parameter scope",
			field_value: "GLOBAL",
			field_type: "chips",
			field_options: [
				{
					label: "Global level",
					value: "GLOBAL",
					disabled: false,
					hidden: false,
				},
				{ label: "User level", value: "USER", disabled: false, hidden: false },
				{
					label: "Project level",
					value: "PROJECT",
					disabled: true,
					hidden: true,
				},
			],
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "secured",
			field_label: "Secure this parameter",
			field_value: false,
			field_type: "checkbox",
			field_width: "20%",
			field_mandatory: false,
		},
	],
};

export const MODEL_DEPLOYMENT_CONFIGURATION_FORM = {
	CONFIGURATION_DETAILS: [
		{
			field_id: "resource_id",
			field_label: "Resource utilization",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "target_cpu_utilization",
			field_label: "Target CPU utilization (for auto scaling)",
			field_value: "70",
			field_max_limit: 3,
			field_type: "number",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "deploy_mode",
			field_label: "Select a deploy mode",
			field_value: "Production",
			field_type: "chips",
			field_options: [
				{ label: "Production", value: "Production", disabled: false },
				{ label: "Pre-production", value: "PreProd", disabled: true },
				{ label: "Canary", value: "Canary", disabled: true },
				{ label: "A/B Testing", value: "AB-Testing", disabled: true },
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "auto_shutdown",
			field_label: "Model deployment settings",
			field_value: true,
			field_type: "togglechips",
			field_options: [{ label: "Auto shutdown", value: true }],
			field_width: "100%",
			field_mandatory: true,
		},
	],
};
export const RUN_NOTEBOOK = {
	NOTEBOOK_DETAILS: [
		{
			field_id: "template_run_id",
			field_label: "Template",
			field_value: "",
			field_type: "asyncselect",
			field_width: "100%",
			field_options: [],
			field_mandatory: true,
			field_preload: true,
		},
		{
			field_id: "template_resource_id",
			field_label: "Resource id",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "template_kernel_type",
			field_label: "Kernel type",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "template_name",
			field_label: "Template name",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "inputSnapshot",
			field_label: "Input data snapshot",
			field_value: "",
			field_options: [],
			field_type: "asyncselect",
			field_width: "100%",
			field_preload: true,
		},
		{
			field_id: "outputSnapshot",
			field_label: "Output data snapshot",
			field_value: "",
			field_type: "text",
			field_width: "100%",
		},
	],
};

export const SCHEDULE_NOTEBOOK = {
	SCHEDULE_DETAILS: [
		{
			field_id: "template_run_id",
			field_label: "Template",
			field_value: "",
			field_type: "asyncselect",
			field_width: "100%",
			field_options: [],
			field_mandatory: true,
			field_preload: true,
		},
		{
			field_id: "default_container_size",
			field_label: "Default container size",
			field_value: "",
			field_type: "asyncselect",
			field_width: "100%",
			field_options: [],
			field_mandatory: true,
			field_preload: true,
		},
		{
			field_id: "cron_value",
			field_label: "Cron Value (in Unix format)",
			field_value: "0 0 * * *",
			field_placeholder: "0 0 * * *",
			field_type: "text",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "outputSnapshot",
			field_label: "Output data snapshot",
			field_value: "",
			field_type: "text",
			field_width: "100%",
		},
	],
};

export const CONFIGURE_FEATURE_STORE_BASIC_DETAILS = {
	BASIC_DETAILS: [
		{
			field_id: "feature_store_name",
			field_label: "Feature store name",
			field_value: "",
			field_type: "text",
			field_max_limit: 25,
			field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
			field_validation_message:
				"Feature store name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
			field_width: "100%",
			field_min_limit: 3,
			field_min_message: "Feature store name should contain at least 3 characters",
			field_mandatory: true,
		},
		{
			field_id: "feature_store_description",
			field_label: "Description",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			max_characters: 100,
			field_validation_regex: /^[A-Za-z][A-Za-z0-9\s\-_,!.]{9,99}$/,
			field_validation_message:
				"Feature store description must start with an alphabet and contain only alphabets, numbers and '!_-.,' as special characters",
			field_mandatory: false,
			field_min_limit: 10,
			field_min_message: "Feature store description should contain at least 10 characters",
		},
		{
			field_id: "git_repo_name",
			field_label: "Select repository",
			field_value: "",
			field_type: "asyncselect",
			alternate_field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "git_repo_id",
			field_label: "Repo id",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "git_branch_name",
			field_label: "Select branch",
			field_value: "",
			field_type: "select",
			alternate_field_type: "select",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "branches",
			field_label: "Branches",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "base_folder",
			field_label: "Base folder",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "active_branch",
			field_label: "Active branch",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "file_path",
			field_label: "Select file",
			field_value: "",
			field_type: "asyncselect",
			alternate_field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
			popper_component: true,
		},
	],
};

export const CONFIGURE_FEATURE_STORE_DATASETS = {
	BASIC_DETAILS: [
		{
			section_label: "Offline store dataset",
		},
		{
			field_id: "offline_data_source",
			field_label: "Data source",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "offline_data_source_id",
			field_label: "Data source id",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "48%",
			field_mandatory: false,
		},
		{
			field_id: "offline_connection",
			field_label: "Connection name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "offline_connection_id",
			field_label: "Connection id",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "48%",
			field_mandatory: false,
		},
		{
			field_id: "offline_database",
			field_label: "Database name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "offline_database_object",
			field_label: "Database object",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "48%",
			field_mandatory: false,
		},
		{
			field_id: "offline_schema",
			field_label: "Schema name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "same_dataset",
			field_label: "Same as offline store dataset",
			field_value: false,
			field_type: "checkbox",
			field_width: "20%",
			field_mandatory: false,
		},
		{
			section_label: "Online store dataset",
		},
		{
			field_id: "online_data_source",
			field_label: "Data source",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			disabled: false,
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "online_data_source_id",
			field_label: "Data source id",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "48%",
			field_mandatory: false,
		},
		{
			field_id: "online_connection",
			field_label: "Connection name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			disabled: false,
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "online_connection_id",
			field_label: "Connection id",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "48%",
			field_mandatory: false,
		},
		{
			field_id: "online_database",
			field_label: "Database name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			disabled: false,
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "online_database_object",
			field_label: "Database object",
			field_value: "",
			field_type: "hidden",
			field_options: [],
			field_width: "48%",
			field_mandatory: false,
		},
		{
			field_id: "online_schema",
			field_label: "Schema name",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "48%",
			disabled: false,
			field_preload: true,
			field_mandatory: true,
		},
	],
};

export const CONFIGURE_FEATURE_STORE_JOB_CONFIGURATION = {
	BASIC_DETAILS: [
		{
			field_id: "frequency",
			field_label: "Frequency of materialization",
			field_value: {
				frequencyType: "ONCE",
				time: null,
				zone: null,
				day: null,
				date: null,
			},
			field_type: "configurableRadio",
			field_options: [
				{ label: "Once", value: "once" },
				{ label: "Daily", value: "daily" },
				{ label: "Weekly", value: "weekly" },
				{ label: "Monthly", value: "monthly" },
			],
			field_width: "100%",
			field_mandatory: false,
		},
	],
};

export const LAUNCH_TEMPLATE = {
	TEMPLATE_DETAILS: [
		{
			section_label: "Register data snapshots?",
		},
		{
			field_id: "register_condition",
			field_label: "Register",
			field_value: "no",
			field_type: "radio",
			field_options: [
				{ label: "Yes", value: "yes" },
				{ label: "No", value: "no" },
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "snapshotDescription",
			field_type: "hidden",
			section_description:
				"Input and output data snapshots will be available at '/input' and '/output' directory respectively",
		},
		{
			field_id: "inputSnapshot",
			field_label: "Input data snapshot",
			field_value: "",
			field_options: [],
			field_type: "hidden",
			alternate_field_type: "asyncselect",
			field_width: "100%",
			field_preload: true,
		},
		{
			field_id: "outputSnapshot",
			field_label: "Output data snapshot",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "text",
			field_width: "100%",
		},
		{
			field_id: "connection",
			field_label: "Connection",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "asyncselect",
			field_placeholder: "Select connection",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "database",
			field_label: "Database",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "asyncselect",
			field_placeholder: "Select database",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "schema",
			field_label: "Schema",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "asyncselect",
			field_placeholder: "Select schema",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "computepoolname",
			field_label: "Compute Pool Name",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "asyncselect",
			field_placeholder: "Select compute pool name",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "stageid",
			field_label: "Stage",
			field_value: "",
			field_type: "hidden",
			field_placeholder: "Select stage",
			alternate_field_type: "asyncselect",
			field_width: "100%",
		},
		{
			field_id: "jira_id",
			field_label: "Issue id",
			field_value: "",
			field_validation_regex: /^[A-Za-z][A-Za-z0-9\s#@_$]*$/,
			field_validation_message: "Issue id must start with an alphabet and contain only alphabets, numbers and _,@,$,#.",
			field_type: "text",
			field_width: "100%",
			field_max_limit: 15,
			max_rows: 1,
			max_characters: 15,
		},
		{
			field_id: "commit_message",
			field_label: "Commit message",
			field_value: "",
			field_type: "multiline",
			max_rows: 4,
			max_characters: 200,
			field_width: "100%",
		},
		{
			section_label: "Notebook timeout",
		},
		{
			section_description: "Indicates automatic termination of notebook while not in use",
		},
		{
			field_id: "cull_idle_in_minutes",
			field_value: "60",
			field_type: "chips",
			field_options: [
				{ label: "1 hr", value: "60", disabled: false },
				{ label: "2 hr", value: "120", disabled: false },
				{ label: "4 hr", value: "240", disabled: false },
				{ label: "8 hr", value: "480", disabled: false },
				{ label: "16 hr", value: "960", disabled: false },
			],
			field_width: "100%",
			field_mandatory: true,
		},
	],
};

export const CRON_FORM = {
	CRON_DETAILS: [
		{
			field_id: "cronValue",
			field_label: "",
			field_value: "cron",
			field_type: "radio",
			field_options: [
				{ label: "Cron", value: "cron" },
				{ label: "Tags", value: "tags" },
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "edit_cron",
			field_label: "Cron Value(in Unix Format)",
			field_value: "",
			field_type: "text",
			field_width: "100%",
			field_mandatory: true,
		},
	],
};

export const SETTINGS_FORM = {
	SETTINGS: [
		{
			field_id: "settings",
			field_label: "",
			field_value: "success_email",
			field_type: "radio",
			field_options: [
				{ label: "Success Email", value: "success_email" },
				{ label: "Failure Email", value: "failure_email" },
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "success_sender",
			field_label: "To",
			field_value: [],
			field_type: "multipleselect",
			field_options: [],
			field_width: "100%",
		},
		{
			field_id: "success_subject",
			field_label: "Subject",
			field_value: "",
			field_type: "multiline",
			max_rows: 4,
			max_characters: 200,
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "success_settings_email_content",
			field_label: "",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "failure_sender",
			field_label: "To",
			field_value: [],
			field_type: "hidden",
			field_width: "100%",
		},
		{
			field_id: "failure_subject",
			field_label: "Subject",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "failure_settings_email_content",
			field_label: "",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
	],
};

export const EXPERIMENT_DETAILS_FORM = {
	EXPERIMENT_DETAILS: [
		{
			field_id: "experiment_name",
			field_label: "Name",
			field_value: "",
			field_type: "text",
			field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
			field_validation_message:
				"Experiment name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
			field_max_limit: 25,
			field_max_message: "Experiment name should not exceed 25 characters",
			field_width: "100%",
			field_min_limit: 3,
			field_min_message: "Experiment name should contain at least 3 characters",
			field_mandatory: true,
		},
		{
			field_id: "experiment_description",
			field_label: "Description",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			max_characters: 100,
			field_validation_regex: /^[A-Za-z][A-Za-z0-9\s\-_,!.]{9,99}$/,
			field_validation_message:
				"Experiment description must start with an alphabet and contain only alphabets, numbers and '!_-.,' as special characters",
			field_mandatory: false,
			field_min_limit: 10,
			field_min_message: "Experiment description should contain at least 10 characters",
		},
		{
			field_id: "algorithm_type",
			field_label: "Algorithm type",
			field_value: "regressor",
			field_type: "chips",
			field_options: [
				{ label: "Regressor", value: "regressor", disabled: false },
				{ label: "Classifier", value: "classifier", disabled: false },
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "tags",
			field_label: "tags",
			field_value: "",
			field_options: [
				{
					label: "Algorithms",
					description: "Select algorithm",
					value: "algorithm",
				},
				{ label: "Datasets", description: "Select dataset", value: "dataset" },
				{
					label: "Notebook template",
					description: "Select notebook",
					value: "notebook",
				},
			],
			field_type: "card",
			field_action: true,
			field_width: "100%",
			field_mandatory: false,
		},
	],
};

export const EXPERIMENT_DATASET_FORM = {
	SELECT_DATASET: [
		{
			field_id: "dataset",
			field_label: "dataset",
			field_value: "fileUpload",
			field_type: "radio",
			field_options: [
				{ label: "From file upload", value: "fileUpload" },
				{ label: "From data source", value: "dataSource" },
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "datasets",
			field_label: "datasets",
			field_value: {},
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
	],
};

export const EXPERIMENT_NOTEBOOK_FORM = {
	SELECT_NOTEBOOK: [
		{
			field_id: "notebook",
			field_label: "",
			field_value: "",
			field_type: "radio",
			field_options: [
				{ label: "Created by me", value: "notebookByMe" },
				{ label: "Created by system", value: "notebookBySystem" },
			],
			field_width: "100%",
			field_mandatory: true,
		},
	],
};

export const RUN_EXPERIMENT = {
	RUN_CONFIGURATION: [
		{
			field_id: "inputSnapshot",
			field_label: "Input data snapshot",
			field_value: "",
			field_options: [],
			field_type: "asyncselect",
			field_width: "100%",
			field_preload: true,
		},
		{
			field_id: "outputSnapshot",
			field_label: "Output data snapshot",
			field_value: "",
			field_type: "text",
			field_width: "100%",
		},
	],
};

export const RUN_EXPERIMENT_NOTEBOOK = {
	RUN_CONFIGURATION: [
		{
			field_id: "experiment_id",
			field_label: "Experiment",
			field_value: "",
			field_options: [],
			field_type: "asyncselect",
			field_width: "100%",
			field_preload: true,
			field_mandatory: true,
		},
		{
			field_id: "experiment_name",
			field_label: "Experiment name",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "experiment_template_id",
			field_label: "Experiment template",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "experiment_template_resource_id",
			field_label: "Experiment template resource",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "experiment_template_kernel_type",
			field_label: "Experiment template kernel",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "experiment_algo_details",
			field_label: "Experiment algorithm details",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "tags",
			field_label: "tags",
			field_value: "",
			field_options: [{ label: "Datasets", description: "Select dataset", value: "dataset" }],
			field_type: "card",
			field_action: true,
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "inputSnapshot",
			field_label: "Input data snapshot",
			field_value: "",
			field_options: [],
			field_type: "asyncselect",
			field_width: "100%",
			field_preload: true,
		},
		{
			field_id: "outputSnapshot",
			field_label: "Output data snapshot",
			field_value: "",
			field_type: "text",
			field_width: "100%",
		},
	],
};

export const REGISTER_EXPERIMENT_AS_MODEL_FORM = {
	EXPERIMENT_MODEL: [
		{
			field_id: "name",
			field_label: "Model name",
			field_value: "",
			field_validation_regex: /^(?![-_ ])(?!.*[-_ ]{2})(?!.*[-_ ]$)[A-Za-z][a-zA-Z0-9\s-_ ]+$/,
			field_validation_message:
				"Model name must start with an alphabet, contain only alphabets, numbers and '_,-' as special character and no trailing and consecutive space, '-' and '_'",
			field_max_limit: 25,
			field_max_message: "Model name should not exceed 25 characters",
			field_min_limit: 3,
			field_min_message: "Model name should contain at least 3 characters",
			field_type: "text",
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "description",
			field_label: "Model purpose",
			field_value: "",
			field_type: "multiline",
			field_width: "100%",
			max_rows: 4,
			max_characters: 100,
			field_validation_regex: /^[A-Za-z][A-Za-z0-9\s\-_,!.]{9,99}$/,
			field_validation_message:
				"Model purpose must start with an alphabet and contain only alphabets, numbers and '!_-.,' as special character",
			field_max_message: "Model purpose should not exceed 100 characters",
			field_min_limit: 10,
			field_min_message: "Model purpose should contain at least 10 characters",
			field_mandatory: true,
		},
		{
			field_id: "experiment_run_model_registration_base_id",
			field_label: "Model type",
			field_value: "",
			field_type: "asyncselect",
			field_options: [],
			field_width: "100%",
			field_mandatory: true,
		},
	],
};

export const START_NOTEBOOK = {
	TEMPLATE_DETAILS: [
		{
			field_id: "template_start_id",
			field_label: "Template",
			field_value: "",
			field_type: "asyncselect",
			field_width: "100%",
			field_options: [],
			field_mandatory: true,
			field_preload: true,
		},
		{
			field_id: "template_tags",
			field_label: "Tags",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			field_id: "template_type",
			field_label: "Type",
			field_value: "",
			field_type: "hidden",
			field_width: "100%",
			field_mandatory: false,
		},
		{
			section_label: "Register data snapshots?",
		},
		{
			field_id: "register_condition",
			field_label: "Register",
			field_value: "no",
			field_type: "radio",
			field_options: [
				{ label: "Yes", value: "yes" },
				{ label: "No", value: "no" },
			],
			field_width: "100%",
			field_mandatory: true,
		},
		{
			field_id: "snapshotDescription",
			field_type: "hidden",
			section_description:
				"Input and output data snapshots will be available at '/input' and '/output' directory respectively",
		},
		{
			field_id: "inputSnapshot",
			field_label: "Input data snapshot",
			field_value: "",
			field_options: [],
			field_type: "hidden",
			alternate_field_type: "asyncselect",
			field_width: "100%",
			field_preload: true,
		},
		{
			field_id: "outputSnapshot",
			field_label: "Output data snapshot",
			field_value: "",
			field_type: "hidden",
			alternate_field_type: "text",
			field_width: "100%",
		},
		{
			field_id: "jira_id",
			field_label: "Issue id",
			field_value: "",
			field_validation_regex: /^[A-Za-z][A-Za-z0-9\s#@_$]*$/,
			field_validation_message: "Issue id must start with an alphabet and contain only alphabets, numbers and _,@,$,#.",
			field_type: "multiline",
			field_width: "100%",
			field_max_limit: 15,
			max_rows: 1,
			max_characters: 15,
		},
		{
			field_id: "commit_message",
			field_label: "Commit message",
			field_value: "",
			field_type: "multiline",
			max_rows: 4,
			max_characters: 200,
			field_width: "100%",
		},
		{
			section_label: "Notebook timeout",
		},
		{
			section_description: "Indicates automatic termination of notebook while not in use",
		},
		{
			field_id: "cull_idle_in_minutes",
			field_value: "60",
			field_type: "chips",
			field_options: [
				{ label: "1 hr", value: "60", disabled: false },
				{ label: "2 hr", value: "120", disabled: false },
				{ label: "4 hr", value: "240", disabled: false },
				{ label: "8 hr", value: "480", disabled: false },
				{ label: "16 hr", value: "960", disabled: false },
			],
			field_width: "100%",
			field_mandatory: true,
		},
	],
};

